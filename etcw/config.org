# -*- mode: org -*-
# -*- coding: utf-8 -*-
#+TITLE: Primary Configuration File
#+AUTHOR: Evan Wilde
#+EMAIL: etcwilde@uvic.ca
#+DRAWERS: HIDDEN STATE
#+CATEGORY: Configuration
#+PROPERTY: tangle `(concat etcw-conf-dir "config.el")`
#+PROPERTY: header-args:C++ :results output :flags -std=c++14 -Wall --pedantic -Werror
#+PROPERTY: header-args:R   :results output :colnames yes

This file is for personal configuration

* Environment Behaviour

Prefer y-n versus yes-no

#+BEGIN_SRC emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

Hide bells and whistles

#+BEGIN_SRC emacs-lisp
(setq ring-bell-function 'ignore)
(setq inhibit-startup-screen t
      initial-scratch-message nil)

(disable-modes '(menu-bar-mode
                 tool-bar-mode
                 scroll-bar-mode))
(enable-modes '(abbrev-mode
                column-number-mode
                delete-selection-mode))

(hook-modes '(global-company-mode
              global-linum-mode))
#+END_SRC

Highlight matching parenthesis

#+BEGIN_SRC emacs-lisp
(setq show-paren-delay 0.25)
(show-paren-mode t)
#+END_SRC

Put the autosaves in a separate directory
#+BEGIN_SRC emacs-lisp
(defvar emacs-autosave-dir
    (concat user-emacs-directory "autosaves/")
    "Dictates where to put autosave files")

(setq backup-directory-alist
    `((".*" . ,emacs-autosave-dir))
    auto-save-file-name-transforms
    `((".*" ,emacs-autosave-dir t)))
#+END_SRC

* Text Editing Configuration

End sentences with a single space

#+BEGIN_SRC emacs-lisp
(setq sentence-end-double-space nil)
#+END_SRC

Set basic properties for all buffers

Sets width, line-wrappting, use spaces instead of tabs, and how the buffers will split.

#+BEGIN_SRC emacs-lisp
(setq-default fill-column 79
              truncate-lines t
	      indent-tabs-mode nil
	      split-width-threshold 160
	      split-height-threshold nil
	      auto-fill-function 'do-auto-fill)
#+END_SRC

Narrowing a region is pretty cool, but can be confusing.

`C-x n n` will narrow to the selected region
`C-x n w` will widen to show the whole region again

#+BEGIN_SRC emacs-lisp
(put 'narrow-to-region 'disabled nil)
#+END_SRC
* Org-mode languages

Initialize languages to use in org-mode

#+BEGIN_SRC emacs-lisp
(org-babel-do-load-languages
   'org-babel-load '((emacs-lisp . t)
                     (sqlite . t)
                     (R . t)
                     (python . t)
                     (C++ . t)
                     (C . t)))
#+END_SRC

Org-mode code block behaviour

#+BEGIN_SRC emacs-lisp
(setq org-src-tab-acts-natively t
      org-edit-src-content-indentation 0
      org-src-fontify-natively t
      org-confirm-babel-evaluate nil
      org-support-shift-select 'always)
#+END_SRC
